name: "PR Cleanup workflow"

on:
  workflow_call:

    inputs:
      SLACK_DEV_DEPLOY_CHANNEL_ID:
        type: string
        required: true
        description: '#gh-deploy-dev ID'
      NAMESPACE:
        type: string
        required: true
        description: 'Namespace in the cluster'
      KUSTOMIZE_OVERLAY:
        type: string
        required: true
        description: 'Path to Kustomize overlay'
      KUSTOMIZE_ROOT:
        type: string
        required: true
        description: 'Path to Kustomize root'
      HOSTED_ZONE_ID_INT:
        type: string
        required: true
        description: 'R53 Hosted Zone ID'
      DOMAIN_INT:
        type: string
        required: true
        description: 'internal dev domain'
      INT_SXDEVIO_ELB:
        type: string
        required: true
        description: 'internal dev elb'
    secrets:
      slack-bot-token:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true

jobs:
  pr_cleanup:
    runs-on: small-runner
    outputs:
      PR_TAG: ${{ env.PR_TAG }}
      SLACK_MESSAGE_ID: ${{ steps.gh-cleanup-dev.outputs.message_id }}
    steps:
      - name: Set environment variables
        run: |
          PR_TAG=pr-`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`
          echo "PR_TAG=pr-`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV

      - name: Notify Slack of Cleanup
        id: gh-cleanup-dev
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          status: PR ${{ env.PR_TAG }} closed. Recycling...
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}

      - name: "Delete PR DNS Record "
        uses: Roosterfish/aws-route53-record-set-action@master
        with: 
          aws_access_key_id: ${{ secrets.aws-access-key-id }}
          aws_secret_access_key: ${{ secrets.aws-secret-access-key }}
          aws_route53_hosted_zone_id: ${{ inputs.HOSTED_ZONE_ID_INT }}
          aws_route53_rr_action: "DELETE"
          aws_route53_rr_name: ${{ env.PR_TAG }}.int.sxdev.io
          aws_route53_rr_type: "CNAME"
          aws_route53_rr_ttl: "300"
          aws_route53_rr_value: "${{ inputs.INT_SXDEVIO_ELB }}"
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
                
      - name: Inject image tag into files
        run: |
          sudo apt-get update -y
          sudo apt-get install gettext -y
          FILES=(${{ inputs.KUSTOMIZE_ROOT }}/base/* ${{ inputs.KUSTOMIZE_ROOT }}/overlays/dev/*)
          for FILE in ${FILES[@]}; do
            if [[ -n ${PATTERN} ]] ; then
              envsubst "${PATTERN}" < $FILE > /tmp/envsubst || exit 1
            else
              envsubst < $FILE > /tmp/envsubst || exit 1
            fi
            mv /tmp/envsubst $FILE || exit 1
          done
        env:
          PATTERN: $PR_TAG 

      - name: Delete PR from cluster
        uses: SwipeStoxGmbH/reusable-workflows/actions/delete@master
        with:
          NAMESPACE: ${{ inputs.NAMESPACE }}
          KUSTOMIZE_OVERLAY: ${{ inputs.KUSTOMIZE_OVERLAY }}

  slack_report_success:
    runs-on: small-runner
    needs: [pr_cleanup]
    if: success()
    steps: 
      - name: Notify Slack of Success
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          message_id: ${{ needs.pr_cleanup.outputs.SLACK_MESSAGE_ID }}
          status: PR ${{ needs.pr_cleanup.outputs.PR_TAG }} closed and recycled.
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 

  slack_report_fail:
    runs-on: small-runner
    needs: [pr_cleanup]
    if: failure()
    steps: 
      - name: Notify Slack of Failure
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          message_id: ${{ needs.pr_cleanup.outputs.SLACK_MESSAGE_ID }}
          status: PR ${{ needs.pr_cleanup.outputs.PR_TAG }} closed. Recycling failed!
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 