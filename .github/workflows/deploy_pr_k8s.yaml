name: "Deploy to dev k8s"

on:
  workflow_call:

    inputs:
      SLACK_DEV_DEPLOY_CHANNEL_ID:
        type: string
        required: true
        description: '#gh-deploy-dev ID'
      NAMESPACE:
        type: string
        required: true
        description: 'Namespace in the cluster'
      DEPLOYMENT_PATH:
        type: string
        required: true
        description: 'Path to Kustomize base'
      HOSTED_ZONE_ID_INT:
        type: string
        required: true
        description: 'R53 Hosted Zone ID'
      DOMAIN_INT:
        type: string
        required: true
        description: 'internal dev domain'
      INT_SXDEVIO_ELB:
        type: string
        required: true
        description: 'internal dev elb'
    secrets:
      slack-bot-token:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true

jobs:
  deploy_pr:
    runs-on: small-runner
    outputs:
      SLACK_MESSAGE_ID: ${{ steps.gh-deploy-dev.outputs.message_id }}
      TAG: ${{ env.TAG }}
      PR_DNS_INT_FRM: ${{ env.PR_DNS_INT_FRM }}
    steps:
      - name: Set environment variables
        id: envs
        run: |
          TAG=pr-`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`
          echo "TAG=pr-`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV
      
      - name: Install envsubst 
        run: |
          sudo apt-get update -y
          sudo apt-get install gettext -y

      - name: Install AWS cli
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@master

      - name: Notify Slack of Deploy
        id: gh-deploy-dev
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          status: Deploying ${{ env.TAG }} on Dev
          color: 0037FF
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}


      - name: Inject image tag into files
        uses: SwipeStoxGmbH/reusable-workflows/actions/envsubst@master
        with:
          patterns: $TAG
        env:
          TAG: ${{ env.TAG }}

      - name: Deploy PR
        uses: SwipeStoxGmbH/reusable-workflows/actions/deploy-pr@master
        with:
          NAMESPACE: ${{ inputs.NAMESPACE }}
          DEPLOYMENT_PATH: ${{ inputs.DEPLOYMENT_PATH }}

      - name: Post-deployment tasks
        run: |
          PR_DNS_INT_FRM="${{ env.TAG }}.${{ inputs.DOMAIN_INT }}."
          if aws route53 list-resource-record-sets --hosted-zone-id ${{ inputs.HOSTED_ZONE_ID_INT }} --query "ResourceRecordSets[?Name == ${PR_DNS_INT_FRM}]" >/dev/null 2>&1 ; then
            echo "DNS record exists. Skipping"
          else
            echo "DNS Record does not exist. Creating DNS "
            aws route53 change-resource-record-sets --hosted-zone-id ${{ inputs.HOSTED_ZONE_ID_INT }} --change-batch '{"Comment":"Creating a record set","Changes":[{"Action":"CREATE","ResourceRecordSet":{"Name":"'"${{ env.TAG }}.${{ inputs.DOMAIN_INT }}"'","Type":"CNAME","TTL":300,"ResourceRecords":[{"Value":"'"${{ inputs.INT_SXDEVIO_ELB }}"'"}]}}]}'
          fi

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        if: ${{ inputs.CF_DISTRIBUTION_ID != '' &&  inputs.CF_INVALIDATION_PATHS != '' }}
        env:
          DISTRIBUTION: ${{ inputs.CF_DISTRIBUTION_ID }}
          PATHS: ${{ inputs.CF_INVALIDATION_PATHS }}
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
          
  slack_report_success:
    runs-on: small-runner
    needs: [deploy_pr]
    if: success()
    steps: 
      - name: Notify Slack of Success
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          message_id: ${{ needs.deploy_pr.outputs.slack_message_id }}
          status: PR deployed on https://${{ needs.deploy_pr.outputs.PR_DNS_INT_FRM }}
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 

  slack_report_fail:
    runs-on: small-runner
    needs: [deploy_pr]
    if: failure()
    steps: 
      - name: Notify Slack of Failure
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_DEV_DEPLOY_CHANNEL_ID }}
          message_id: ${{ needs.deploy_pr.outputs.slack_message_id }}
          status: ${{ needs.deploy_pr.outputs.TAG }} PR Deployment Failed
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 